/*
You are inside:

6 - Components
Here we also only use classes. It is where we begin to stylize our elements more specifically.
While in the objects we try to abstract as much as possible, to have many reusable and generic objects, here we will 
be specific when creating the components.
*/

h1 {
  color: var(--mainColor);
}

.container {
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  max-width: 80rem;
  margin: 0 auto;
  padding: 2rem;
}

.container > * {
  width: 100%;
}

.flex-column {
  display: flex;
  flex-direction: column;
}

.flex-center {
  justify-content: center;
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.text-center {
  text-align: center;
}

.hidden {
  display: none;
}

/* Menu */

#titleMain {
  margin: 50px 0;
}

.btn {
  font-size: 1.8rem;
  padding: 1rem;
  width: 20rem;
  text-align: center;
  margin-bottom: 1rem;
  text-decoration: none;
  color: var(--secondaryColor);
  background-color: var(--secondaryBackground);
  border-radius: 1rem;
  /* test this case now */
}

.btn:hover {
  cursor: pointer;
  box-shadow: 0 0.4rem 1.4rem 0 var(--allShadows);
  transform: translateY(-0.1rem);
  transition: transform 150ms;
}

.btn[disabled]:hover {
  cursor: not-allowed;
  box-shadow: none;
  transform: none;
}

/* FORMS */
form {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

input {
  margin-bottom: 1rem;
  width: 20rem;
  padding: 1.5rem;
  font-size: 1.8rem;
  border: none;
  box-shadow: 0 0.1rem 1.4rem 0 var(--allShadows);
  background-color: var(--secondaryBackground);
  border-radius: 1rem;
}

input::placeholder {
  color: #aaa;
}
